☆★☆创建版本库：
1、初始化一个Git仓库，使用 git init 命令。
2、添加文件到Git仓库，分两步：
	・ 第一步，使用命令 git add <file>, 注意，可反复多次使用，添加多个文件；
	・ 第二步，使用命令 git commit ，完成。

☆★☆时光机穿梭：
1、要随时掌握工作区的状态，使用 git status 命令。
2、如果 git status 告诉你有文件被修改过，用 git diff 可以查看修改内容。
	
☆★☆版本回退：
1、HEAD 指向的版本就是当前版本，因此，Git允许我们在版本的历史之间穿梭，使用命令 git reset --hard commit_id 。
2、穿梭前，用 git log 可以查看提交历史（历史过多，会逐页显示，按q退出），以便确定要回退到哪个版本。
3、要重返未来，用 git reflog 查看命令历史，以便确定要回到未来的哪个版本。

☆★☆撤销修改：
1、场景一：当你改乱了工作区某个文件的内容，想直接丢弃工作区对该文件的修改时，用命令 git checkout -- file 。
2、场景二：当你不但改乱了工作区某个文件的内容，还添加到了暂存区时，想丢弃修改，分两步，第一步用命令 git  reset  HEAD  file , 就回到了场景1，第二部依照场景1操作。
3、场景三：已经提交了不合时候的修改到版本库时，想要撤销本次提交，按版本回退操作。

☆★☆删除修改：
1、$ rm <file> 可删除工作区的某个文件。
2、想将这次删除提交，用 git  rm  <file> （相当于修改的git add），然后用 git  commit  -m  "版本说明" 来提交这次删除操作。
3、如果是误删，且未加入stage，想直接在工作区中恢复，用 git  checkout  --  <file> 命令即可。（删除也是一种修改）
4、如果一个文件已经被提交到版本库，那么你永远不用担心误删，但是要小心，你只能恢复文件到最新版本，你会丢失最近一次提交后你修改的内容。

☆★☆添加远程库：
1、要关联一个远程库，使用命令: git remote add origin git@server-name:path/repo-name.git 。
2、关联后，使用命令： git push -u origin master 第一次推送master分支的所有内容。
3、此后，每次本地提交后，只要有必要，就可以使用命令 git push origin master 推送最新修改。